#include<bits/stdc++.h>
using namespace std;
int test;
int n;
string s[10001];
int parent_node, child_node;
char x;
struct node
{
    int data;
    node *left,*right;
};
node *create_node(int data)
{
    node *temp=new node;
    temp->data=data;
    temp->left=temp->right=NULL;
    return temp;
}
void build_tree(node *temp, char x, int parent_node,int child_node)
{
    if(temp!=NULL)
    {
        if(temp->data==parent_node)
        {
            if(x=='L')temp->left=create_node(child_node);
            else temp->right=create_node(child_node);
        }
        build_tree(temp->left,x,parent_node,child_node);
        build_tree(temp->right,x,parent_node,child_node);
    }
}
void print(node *temp)
{
    queue<node*>q;
    q.push(temp);
    while(!q.empty())
    {
        node *top=q.front();
        q.pop();
        cout<<top->data<<" ";
        if(top->left!=NULL)q.push(top->left);
        if(top->right!=NULL)q.push(top->right);
    }
}
int main()
{
    cin>>test;
    while(test--)
    {
        cin>>n;
        cin>>parent_node>>child_node>>x;
        node *temp=create_node(parent_node);
        build_tree(temp,x,parent_node,child_node);
        for(int i=2;i<=n;i++)
        {
            cin>>parent_node>>child_node>>x;
            build_tree(temp,x,parent_node,child_node);
        }
        print(temp);
        cout<<endl;
  
    }
    
    return 0;
}
