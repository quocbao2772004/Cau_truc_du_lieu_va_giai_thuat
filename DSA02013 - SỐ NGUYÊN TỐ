#include<bits/stdc++.h>
#define endl '\n'
using namespace std;
void faster()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
const int N=200;
int test;
int n,p,s;
vector<int>primes;
vector<bool>is_prime(201,1);
void snt()
{
    is_prime[0]=0,is_prime[1]=0;
    for(int i=2;i<=N;i++)
    {
        if(is_prime[i])
        {
            primes.push_back(i);
            for(int j=i*i;j<=N;j+=i)is_prime[j]=0;
        }
    }
}
// Cho ba số N, P, S. Trong đó, P là một số nguyên tố. Nhiệm vụ của bạn là đưa ra tất cả N số nguyên tố lớn hơn P có tổng bằng S. 
// Ví dụ với S = 28, P=7, N =2 ta có kết quả 11 + 17 = 28. Với N = 3, P = 2, S = 23 ta có kết quả : {3, 7, 13}, {5, 7, 11}
int x[500];
vector<string>res;
void thu(int i,int t,int s)
{
    if(s-t<0)return ;
    for(int j=t;j<=s;j++)
    if(is_prime[j]&&s-j>=0)
    {
        x[i]=j;
        if(i==n&&s-j==0)
        {
            string s="";
            for(int v=1;v<=n;v++)
            {
                s=s+to_string(x[v])+" ";
                
            }
            res.push_back(s);
        }
        else 
        thu(i+1,j+1,s-j);
    }
}
int main()
{
    faster();
    snt();
    //cout<<primes.size()<<endl;
    cin>>test;
    while(test--)
    {
        
        cin>>n>>p>>s;
        thu(1,p+1,s);
        cout<<res.size()<<endl;
        for(auto i:res)
        {
            cout<<i<<endl;
        }
        res.clear();
    }
    
    
    return 0;
}
