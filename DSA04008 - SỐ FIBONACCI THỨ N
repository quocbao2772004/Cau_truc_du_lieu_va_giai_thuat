#include <bits/stdc++.h>
#define ll long long
#define Matrix vector<vector<long long>>
using namespace std;
const int mod = 1e9 + 7;
void faster()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
Matrix multiply(const Matrix &a, const Matrix &b)
{
    Matrix c(3, vector<long long>(3, 0));
    for (int i = 1; i <= 2; i++)
    {
        for (int j = 1; j <= 2; j++)
        {
            for (int k = 1; k <= 2; k++)
            {
                c[i][j] = (c[i][j] % mod + (((a[i][k] % mod) * (b[k][j] % mod)) % mod) % mod) % mod;
            }
        }
    }
    return c;
}
Matrix power(const Matrix &a, int n)
{
    if (n == 1) return a;
    Matrix res = power(a, n / 2);
    if (n % 2 == 1) return multiply(a, multiply(res, res));
    else return multiply(res, res);
}
void display(const Matrix &a)
{
    cout << a[1][1] << endl;
}
int test;
int n;
int main()
{
    faster();
    cin >> test;
    while (test--)
    {
        cin >> n;
        Matrix a((3), vector<long long>(3, 1));
        a[2][2] = 0;
        display(power(a, n - 1));
    }
}
